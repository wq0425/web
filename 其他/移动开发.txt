版本控制工具
svn
---------------------------------------------
?  蓝色圆圈 不受版本控制
+  蓝色加号 添加未提交
√ 绿色圆圈 提交
！红色圆圈 修改未提交
! 黄色三角 冲突

locked 解决办法
1、右键 update 
2、右键svn - clean up
3、右键svn - clean up 选项全部勾选， 执行的操作有 删除不受版本控制的文件、文件夹，撤销所有操作，删除非法的文件、文件夹，刷新视图
4、右键 commit 查看是否有文件，正常状态没有任何文件   ( missing 丢失文件  deleted 删除  add 添加 modify 修改)  。

提交的选项中有文件，点击提交，执行步骤1 

如果还是报错，working copy 里面右键 svn - revert   全选 撤销所有操作，执行步骤1
如果还是报错，删除有问题的文件夹，执行步骤1， 修改文件，提交，更新 
如果还是报错，删除整个working copy,重新迁出



自动化构建工具 (基于流stream的自动化构建工具)
------------------------------------------------
npm install -g gulp
npm install -g gulp-minify-css
npm install -g gulp-uglify
npm install -g gulp-rename
npm install -g gulp-concat

css 预处理器 sass（配合webstrome 集成化开发）

var gulp = require("gulp");

gulp.task("minifycss",function(){
  return gulp.src('css/*.css') 
        .pipe(concat('main.css'))
        .pipe(rename({suffix: '.min'}))
        .pipe(minifyCSS())   //执行压缩
        .pipe(gulp.dest('css'))
        .pipe(notify({messafe: 'ok!'}))
});

---------------------------------------

配置ruby环境，安装sass模块
测试环境：
ruby -v
gem -v   和npm 一样都是一个包管理工具

为什么要设置淘宝镜像？

//将默认资源库设置为淘宝镜像
step1:
gem sources --remove https://rubygems.org/
gem sources -a https://ruby.taobao.org/
step2:
gem sources --remove https://ruby.taobao.org/
gem sources -a http://gems.ruby-china.org

gem install sass  //安装beta版本
gem update sass   //升级sass版

sass -v
sass -h

修改sass 输出参数

默认 Arguments:
--no-cache --update $FileName$:$FileNameWithoutExtension$.css

修改 Arguments:
--no-cache --update --sourcemap --watch $FileName$:$FileNameWithoutExtension$.css

默认 Output paths to refresh:
$FileNameWithoutExtension$.css

修改 Output paths to refresh:
$FileNameWithoutExtension$.css:$FileNameWithoutExtension$.css.map
//--no-cache --update --sourcemap --watch $FileName$:$FileParentDir$\css\$FileNameWithoutExtension$.css

---------------------------------------------------------------------------



html5 css5

超文本标记语言 （Hyper Text Mark-up Language）
层叠样式表

//如何开启GPU硬件加速
---------------------------

html条件判断语句
it ie9  ie9 以下  不包含 ie9
ite ie9  ie9 以下  包含 ie9

gt ie9  ie9 以上  不包含 ie9
gte ie9  ie9 以上  包含 ie9

<!--[if lt IE 9]>
<![endif]-->


什么是CDN？
------------------------------------
一个内容分发网络

表现： 一个url地址
干啥: 链接来自网络的静态资源文件
怎么用：  url="https://xxx.css"


html5shiv
------------------------------------
动态创建html5的元素，低版本浏览器的补丁
http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js

response.js
让低版本浏览器支持 媒体查询（media query）
http://cdn.static.runoob.com/libs/html5shiv/3.7/response.min.js

媒体标签
----------------------------------------
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no"/>
<meta name="apple-touch-fullscreen" content="yes">
<meta name="apple-mobile-web-app-capable" content="no"/>
<meta name="apple-mobile-web-app-capable" content="yes"/>
<meta name="apple-mobile-web-app-status-bar-style" content="default"/>
<meta name="apple-mobile-web-app-status-bar-style" content="black"/>
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="format-detection" content="address=no"/>
<meta name="keywords" content="111"/>
<meta name="description" content="111"/>


html5新增标记
----------------------------------------
新增了语义化标签
header footer section nav aside article  hgroup figure video audio
canvas colgroup command details dialog embed mark output source time


canvas
<audio>	定义音频内容
<video>	定义视频（video 或者 movie）
<source>	定义多媒体资源 <video> 和 <audio>
<embed>	定义嵌入的内容，比如插件。
<track>

<datalist>	定义选项列表。请与 input 元素配合使用该元素，来定义 input 可能的值。
<keygen>	规定用于表单的密钥对生成器字段。
<output>

<article>	定义页面独立的内容区域。
<aside>	定义页面的侧边栏内容。
<bdi>	允许您设置一段文本，使其脱离其父元素的文本方向设置。
<command>	定义命令按钮，比如单选按钮、复选框或按钮
<details>	用于描述文档或文档某个部分的细节
<dialog>	定义对话框，比如提示框
<summary>	标签包含 details 元素的标题
<figure>	规定独立的流内容（图像、图表、照片、代码等等）。
<figcaption>	定义 <figure> 元素的标题
<footer>	定义 section 或 document 的页脚。
<header>	定义了文档的头部区域
<mark>	定义带有记号的文本。
<meter>	定义度量衡。仅用于已知最大和最小值的度量。
<nav>	定义运行中的进度（进程）。
<progress>	定义任何类型的任务的进度。
<ruby>	定义 ruby 注释（中文注音或字符）。
<rt>	定义字符（中文注音或字符）的解释或发音。
<rp>	在 ruby 注释中使用，定义不支持 ruby 元素的浏览器所显示的内容。
<section>	定义文档中的节（section、区段）。
<time>	定义日期或时间。
<wbr>	规定在文本中的何处适合添加换行符。

音频、视频常用api
----------------------------------------
载入资源的两种方式

显示控制栏 controls 
自动播放 autoplay
无线播放 loop
播放 play()
暂停 pause()


新增表单：
----------------------------------------
email url  address color search range number
date(date, month, week, time, datetime, datetime-local)
novalidate: 不使用html5浏览器表单验证
placeholder: 占位符

本地存储
----------------------------------------
1、localStorage (cookie)

因为cookie 本身有兼容性问题，需要引入第三方模块解决兼容问题
localStorage 只要是现代浏览器，都可以很好的支持

设值 localStorage.setItem(key, val);
取值 localStorage.getItem(key)
删值 localStorage.removeItem(key);
清空 localStorage.clear();
长度 localStorage.length

会话
1、sessionStorage (session)
设值 sessionStorage.setItem(key, val);
取值 sessionStorage.getItem(key)
删值 sessionStorage.removeItem(key);
清空 sessionStorage.clear();
长度 sessionStorage.length

css3 api
----------------------------------------------
盒子阴影  box-shadow:x,y,r,c
文字阴影  text-shadow:x,y,r,c

背景裁剪  background-clip： conteng-box || padding-box  || border-box
背景图片定位 background-origin:  conteng-box || padding-box  || border-box
背景缩放 background-size: auto auto || 100% auto

转换

平移
---------------------------------
translate(xpx,ypx)
rotate3d(xpx,ypx,zpx)
translateX(xpx)
translateY(ypx)
translateZ(ypx)

旋转
---------------------------------
rotate(xdeg,ydeg)
rotate3d(xdeg,ydeg,zdeg,angle)
rotateX(xdeg)
rotateY(ydeg)
rotateZ(zdeg)

缩放
---------------------------------
scale(2,2)
scale3d(x,y,z)
scaleX(2)
scaleY(2)
scaleZ(2)

倾斜
---------------------------------
skew(x,y)
skewX(xdeg)
skewY(ydeg)

过渡动画
---------------------------------
transition
过渡属性 transition-property 
执行时间 transition-duration
过渡方式 transition-timing-function    linear|| ease|| ease-in ease-out ease-in-out 
	平滑linear
	慢 ease
	由慢到快 ease-in
	由快到慢 ease-out
	由慢到快再到慢 ease-in-out 
过渡延时 transition-delay  2s


文字

text-overflow: ellipsis  clip
text-shadow: x,y,blur,color
x:水平方向
y:垂直方向
blur: 模糊半径
color： 颜色

单词换行
---------------------------------
word-wrap:break-word;

单词拆分换行
---------------------------------
word-break: break-all;

背景
---------------------------------
background-origin  border-box padding-box content-box
box-sizing border-box padding-box content-box
background-clip: border-box|padding-box|content-box;
圆角
------------------------------------
border-radius： 3px
border-top-left-radius:3px
border-bottom-left-radius:3px
border-top-right-radius:3px
border-bottom-right-radius:3px

box-shadow: x,y,blur,color
x:水平方向
y:垂直方向
blur: 模糊半径
color： 颜色

动画
--------------------------------------
@keyframes name{
	form{}
	to{}
}

@keyframes name{
	0%{}
	50%{}
	100%{}
}

animation： name 

动画名称 animation-name 
执行时间 animation-duration
动画方式 animation-timing-function    linear|| ease|| ease-in ease-out ease-in-out 
	平滑linear
	慢 ease
	由慢到快 ease-in
	由快到慢 ease-out
	由慢到快再到慢 ease-in-out 
动画延时 animation-delay  2s
播放次数  animation-iteration-count；count || infinite
动画状态  animation-play-state： running || pause
播放方向  animation-direction： normal|| alternate  从头到尾  从头到尾再到头


多列
------------------------------
列数
column-count
列之间的间距
column-gap
分割线
column-rule
column-rule-width 线条的粗细
column-rule-style 线条的类型
column-rule-color 线条的颜色



媒体查询 
---------------------------------------
设备
print
screen
speach

类型
all not only 


@media not|only mediatype and (min-width:320px) and(max-width:414px) {
    CSS 代码...;
}



canvas
---------------------------------------------------
绘制工具  canvas.getContext('2d');


缩放： contxt.scale(x,y);
重新设置起始点： contxt.translate(0,0);
旋转： contxt.rotate(deg);

保存快照: context.save();
恢复快照: context.restore();


线条样式：context.lineCap = round|| square ||buff
线条宽度：context.lineWidth = value;
线条/文字颜色：context.strokeStyle = value;
设置字体：context.font="size fontfamily";
开始路径：context.begainPath();
删除：context.clearRect(x,y,width,height);

阴影半径：context.shadowBlur = number 
阴影颜色：context.shadowColor = color
阴影偏移：context.shadowOffsetX = number+px
阴影偏移：context.shadowOffsetY = number+px

线性渐变：context.createLinearGradient(x0,y0,x1,y1);
jingxaing渐变：context.createRadialGradient(x0,y0,r0,x1,y1,r1);
背景平铺：context.createPattern(imageObject,repeat||repeat-x||repeat-y||no-repeat);

 
填充颜色：context.fillStyle=value;
对齐方式：context.textAlign= start|| left||center ||end ||right
绘制起点: context.moveTo(x,y);
绘制终点: context.lineTo(x,y);
绘制文字：context.fillText(text,x,y);
绘制弧形：context.art(centerX,centerY,raduis,start,close);
绘制弧形：context.fillRect(startX,startY,width,height);
绘制线条：context.stroke();
填充形状：context.fill();
开始路径：context.closePath();



画布
canvas 
工具
var oContext = canvas.getContext('2d');

画线
----------------------------
oContext.lineCap = "round"  || "square" || "butt"
oContext.strokeStyle = "#666";
oContext.lineWidth = 3;
开始路径：oContext.begainPath();
起始点：oContext.moveTo(x,y);
结束点：oContext.lineTo(x,y);
画线： oContext.stroke();
结束路径 oContext.closePath();


弧：oContext.arc(centerX,centerY,radius,start,end);
centerX:  中心点X轴坐标
centerY:  中心点Y轴坐标
radius: 圆半径
start：绘制弧起始点
end：绘制弧结束点
起始点：oContext.moveTo(x,y);  扇形

oContext.fillRect(startX,startY,width,height);
startX  矩形 x轴起始点
startY  矩形 y轴结束点


oContext.fillText(text,startX,startY)
text:  文字
startX  文字 x轴起始点
startY 文字 y轴结束点

oContext.drawnImage( image,startX,startY,width,height,clipX,clipY,clipwidth,clipheight);
image 图片对象
startX  图片 x轴起始点
startY 图片 y轴结束点
width,height 图片

clipX  裁剪图片 x轴起始点
clipY  裁剪图片 y轴结束点
clipwidth,clipheight  裁剪图片





JSONP 跨域请求
-------------------------------------------
为什么要用jsonp?
因为同源策略对服务器的保护，不同域名或者不同端口或者不同协议 请求不到服务器的数据

jsonp的原理
有些标签是不受同源策略的影响 -  script img iframe

当前域名 http://localhost:63342
目标域名 http://www.taobao.com


动态创建script标签
设置script src="目标域名？username='123'&password='4676'"
将动态创建的script 标签添加到body末尾

同源策略
--------------------------------------
协议相同
域名相同
端口相同

http://www.example.com/dir2/other.html：同源
http://example.com/dir/other.html：不同源（域名不同）
http://v2.www.example.com/dir/other.html：不同源（域名不同）
http://www.example.com:81/dir/other.html：不同源（端口不同）




Bootstrap
---------------------------------------------------
en： getbootstrap.com
cn:  http://www.bootcss.com/

支持IE9+
渐进增强平稳退化
html5shiv.js html5浏览器补丁
response.js 支持媒体查询

面向过程
面向对象

函数封装 将一些通用代码提取到一个函数中，避免代码的冗余
插件 公共的函数封装到一起，实现了某一个功能
组件 插件+皮肤

深度依赖于jquery

框架 组件+插件+皮肤+通用样式+通用脚本


响应式设计
优点：通过一套代码，能够适配多种设备，跨平台，只需要维护一套代码
缺点：资源文件的增加，冗余样式的添加 维护困难




iscroll


<div id="wrapper">
    <div id="scroller">
        <!--网站内容部分-->
    </div>
</div>

hScroll: true, //是否水平滚动
vScroll: true, //是否垂直滚动
x: 0, //滚动水平初始位置
y: 0, //滚动垂直初始位置
bounce: true, //是否超过实际位置反弹
bounceLock: false, //当内容少于滚动是否可以反弹，这个实际用处不大
momentum: true, //动量效果，拖动惯性
lockDirection: true, //当水平滚动和垂直滚动同时生效时，当拖动开始是否锁定另一边的拖动
useTransform: true, //是否使用CSS形变
useTransition: false, //是否使用CSS变换
topOffset: 0, //已经滚动的基准值(一般情况用不到)
checkDOMChanges: false, //是否自动检测内容变化


1、局部滚动  
var myscroll = new  IScroll(ID,{
	scrollbars:true
})


2、横向滚动
var myscroll = new  IScroll(ID,{
	scrollX:true,
	scrollY:false,
	scrollbars:true
})

3、横向滚动点击 myscroll.scrollToElement()
4、下拉刷新，上拉加载

// v4+
var myscroll = new  iScroll(ID,{
	onScrollMove:function(){
	
	},
	onScrollEnd:function(){
	
	},
	onRefresh:function(){
	
	}
})
----------------------------------
// v5+
var myscroll = new  IScroll(ID,{

})

myscroll.on("scrollMove":function(){

});
myscroll.on("scrollEnd":function(){

});
myscroll.on("refresh":function(){

});




swiper
1、轮播
var myswiper = new Swiper(class,{});
2、选项卡切换 myswiper.slideTo(index);

zepto
1、方法、属性的练习
2、ajax 请求，跨域请求

---------------------------------------------------------------------------------------

考试案例预测：
1、排版+滚动+轮播+数据渲染
2、排版+滚动+轮播+数据渲染+动画


微信删除
购物车
按钮菜单
下拉菜单
遮罩层
动画效果
----------------------------------------------------------------------------------------
学习网址：
官网API
cnblog
博客园
张鑫旭

HTML5"大拿必备技能" - 做一个漂漂亮亮的webpage
-----------------------------------------
svg 
canvas
webGL
websocket


知识扩展
---------------------------------------------
php  - wordpress 博客框架
购买服务器 + 购买域名  300-500


待掌握的框架
select2/select3
jqueryUI


定义动画
@keyframes animationname{}

定义关键帧
1、form to
2、0%-100%


--------------------------------------------------------------------------
测试概览：

1、动画、过渡、背景、阴影、弹性盒 新旧 flex box 、多列、旋转、扭曲/倾斜、缩放、位移 translate3d
2、标签 语义化标签默写10
3、sass 定义宏 定义变量 



拖拽，fileReader,history,webStorage

html html5
css  css3 websql webstorage localStorage sessionStorage
commonjs seajs requirejs
nodejs express php mysql 
js jquery zepto iscroll swiper bootstrap 
jquery mobile、jquery ui、jquery validate、EasyUI、amazeui、Sencha Touch 、select2、frozenui
动画库 animate.css 
图表绘制 canvas echarts 
矢量字体图标 fontawesome iconfont glyphicon
css预编译 sass 定义变量 定义常量 混合宏 运算
自动化构建工具 gulp 合并 重命名 压缩（css/ js / html） 混淆

---------------------------------------------------------
地理定位 geolocation map.baidu.com

学习社区 
https://github.com 
http://www.zhangxinxu.com/  
https://www.cnblogs.com/
http://blog.csdn.net/
http://blog.51cto.com/
http://www.daqianduan.com/

------------------------------------------------------------
jquery mobile
jquery validate
jquery ui
hcharts
select2/select3


微信开发接口 （微信分享 朋友圈 群 个人、  qq分享）
-微信开发者账号
-微信公众号

-苹果开发者账号
-icloude 邮箱
-苹果开发者账号

github

---------------------------------------------------------------
SEO  搜索引擎优化
性能优化

-----------------------------------------------------------------
前端项目架构

angularjs+ionic/bootstrap+cordova+es6
vue+bootstrap+es6+webpack+
react+reactNative+es6