					第8单元 语句（二）
						     
				 	     知识点

1、for语句：

    说明：for语句是一种先判断，后运行的循环语句。但它具有在执行循环之前初始变量和

    定义循环后要执行代码的能力。

	单层for循环格式：

	    for(start;end;step){

		循环体;
	    }	

	    for (;;) {      //无限循环
	        循环体
	    }


	起始条件 ：在循环（代码块）开始前执行 ==》初始化值

	终止条件 ： 定义运行循环（代码块）的条件  ==》 判断

	步长值 ：在循环（代码块）已被执行之后执行  ==》 更新
		
	执行顺序：

	    for(1;2;3){
	       代码块 4
	    }		
	    1 --> 2 --> 4  --> 3 --> 2  --> 4  --> 3 ......

		第一步：初始化值只执行一次（声明初始化变量：var i = *;）

		第二步：进入判断（判断更新后的值是否符合该条件）

		第三步：如果判断返回值是true,执行代码块

		第四步：根据步长更新值（执行++、--、+=或者-=）

		第五步：值更新后再次进行判断

		第六步：.......	
	
	*for循环嵌套格式:

            说明：

		当循环与循环发生嵌套时遵循下列规则：

		1、外层为假时内层不执行；

		2、先执行外层再执行内层，直至内层的条件为假时再返回外层去执行。

		3、外层的值可以带入内层来使用

		for(start;end;step){
		    for(start;end;step){
			循环体;
		    }	
	           循环体;
		}
		
2、for in语句  ===》遍历字符串、数组和对象

    说明：

	for...in语句是一种精准的迭代语句，可以用来枚举对象的属性。

	for ... in 循环中的代码每执行一次，就会对数组的元素或者对象的属性进行一次操作。

    格式：
	for (变量 in 对象){
	    在此执行代码
	}

	for(var 变量名 in 对象  字符串  数组)

3、while语句

    说明：While 循环会在指定条件为真时循环执行代码块。

    while语句是一种先判断，后运行的循环语句。必须满足条件了之后，方可运行循环体。

也就是说，while有可能永远不会被执行。	

    格式:

	起始条件
	while(终止条件){
	    循环体;
	    步长值;
	}
			
	var box = 1;	//如果是1，执行五次，如果是大于5的数，不执行
	while (box <= 5) {//先判断，再执行
	    alert(box);
	    box++;
	}

4、do while语句

    说明：do/while 循环是 while 循环的变体。两者的运行却截然不同，do...while

语句是一种先运行，后判断的循环语句。也就是说，不管条件是否满足，至少先运行一次
			
循环体。然后如果条件为真的话，就会重复这个循环。

    与while的区别：这种语法的循环至少要被执行一次。

    格式：
			
	起始条件
	do{
	    循环体;
	    步长值;
	}while(终止条件)

	var box = 1;	//如果是1，执行五次，如果是大于5的数，只执行1次
	do {
	    alert(box);
	    box++;
	} while (box <= 0);//先运行一次，再判断

5、break和continue语句

    说明：

      break和continue语句用于在循环中精确地控制代码的执行；

      break语句会立即退出循环，强制继续执行循环体后面的语句。

      continue语句跳出当前循环，继续后面的循环。

	for(var i=0;i<10;i++){
	    if(i == 5){
		console.log("到我了,你们都停下来吧！");
		break;
	    }
	    console.log(i);
	}

	for(var i=0;i<10;i++){
	    if(i == 5){
		continue;
	    }
	    console.log(i);
	}

*for和while的区别及变形

	for：适合已知循环次数的循环体

	while：适合未知循环次数的循环体

	for是while的一种变形，如果while做不到的，for也一定做不到
